import SwiftUI

struct HelpNavigationView: View {
  @State private var showDonationSheet = false

  var body: some View {
    NavigationView {
      List {
        Section {
          HelpFAQNumbersBlockedItem()
          HelpFAQHowWorksItem()
          HelpFAQContactsNotBlockedItem()
          HelpFAQReportNumberItem()
          HelpFAQCallHistoryItem()
          HelpFAQSupportProjectItem(showDonationSheet: $showDonationSheet)
          HelpFAQPrivacyItem()
          HelpFAQWhyFreeItem(showDonationSheet: $showDonationSheet)
          HelpFAQBearPawItem()
          HelpFAQ33700Item()
          HelpFAQOperatorLookupItem()
          HelpFAQTroubleshootingItem()
        } header: {
          Text("Questions fr√©quentes")
        }

        Section {
          SupportItem()
        } header: {
          Text("Support")
        }

        Section(
          footer:
            Text("Bisou üòò")
            .font(.footnote)
            .frame(maxWidth: .infinity, alignment: .center)
        ) { EmptyView() }
      }
      .listStyle(.insetGrouped)
      .navigationTitle("Aide")
      .sheet(isPresented: $showDonationSheet) {
        DonationSheet()
      }
    }
  }
}

private struct HelpFAQNumbersBlockedItem: View {
  var body: some View {
    DisclosureGroup(
      content: {
        Text(
          [
            "L'application bloque les pr√©fixes suivants, communiqu√©s par l'ARCEP : ",
            "0162, 0163, 0270, 0271, 0377, 0378, 0424, 0425, 0568, 0569, 0948, 0949, ",
            "ainsi que ceux allant de 09475 √† 09479. Ces pr√©fixes sont r√©serv√©s au d√©marchage t√©l√©phonique. ",
            "Elle bloque aussi des num√©ros de t√©l√©phone de certains op√©rateurs comme Manifone, DVS Connect, ",
            "Ze Telecom, Oxilog, BJT Partners, Ubicentrex, Destiny, Kav El International, ",
            "Spartel Services et Comunik CRM.",
          ].joined()
        )
      },
      label: {
        Image(systemName: "questionmark.circle.fill")
          .foregroundColor(.accent)
          .frame(width: 12)
        Text("Quels num√©ros sont bloqu√©s ?")
          .multilineTextAlignment(.leading)
      }
    )
  }
}

private struct HelpFAQHowWorksItem: View {
  var body: some View {
    DisclosureGroup(
      content: {
        Text(
          [
            "L'application utilise une extension de blocage d'appels et de SMS fournie par le syst√®me ",
            "pour filtrer les num√©ros ind√©sirables. Elle est con√ßue pour √™tre simple et efficace, ",
            "sans n√©cessiter de configuration complexe.",
          ].joined()
        )
      },
      label: {
        Image(systemName: "info.circle.fill")
          .foregroundColor(.accent)
          .frame(width: 12)
        Text("Comment fonctionne l'application ?")
          .multilineTextAlignment(.leading)
      }
    )
  }
}

private struct HelpFAQContactsNotBlockedItem: View {
  var body: some View {
    DisclosureGroup(
      content: {
        Text(
          [
            "Les num√©ros de t√©l√©phone enregistr√©s dans vos contacts ne seront jamais bloqu√©s ",
            "par l'application. iOS donne automatiquement la priorit√© aux contacts enregistr√©s ",
            "et les exclut du syst√®me de filtrage. Si vous voulez qu'un num√©ro ne soit plus ",
            "bloqu√©, ajoutez-le simplement √† vos contacts.",
          ].joined()
        )
      },
      label: {
        Image(systemName: "person.fill.checkmark")
          .foregroundColor(.accent)
          .frame(width: 12)
        Text("Comment exclure un num√©ro ?")
          .multilineTextAlignment(.leading)
      }
    )
  }
}

private struct HelpFAQTroubleshootingItem: View {
  var body: some View {
    DisclosureGroup(
      content: {
        VStack(alignment: .leading, spacing: 12) {
          Text(
            "V√©rifiez que l'extension de blocage d'appels est activ√©e dans les r√©glages et attendez quelques minutes avant de r√©essayer."
          )

          Text("Si le probl√®me persiste :")
            .font(.headline)
            .fontWeight(.semibold)

          VStack(alignment: .leading, spacing: 8) {
            HStack(alignment: .top, spacing: 10) {
              Text("1")
                .fontWeight(.bold)
              Text("D√©sactivez Saracroche dans les r√©glages, si elle appara√Æt.")
                .multilineTextAlignment(.leading)
            }

            HStack(alignment: .top, spacing: 10) {
              Text("2")
                .fontWeight(.bold)
              Text("D√©sinstallez l'application Saracroche.")
                .multilineTextAlignment(.leading)
            }

            HStack(alignment: .top, spacing: 10) {
              Text("3")
                .fontWeight(.bold)
              Text("Red√©marrez votre appareil.")
                .multilineTextAlignment(.leading)
            }

            HStack(alignment: .top, spacing: 10) {
              Text("4")
                .fontWeight(.bold)
              Text("R√©installez l'application Saracroche depuis l'App Store.")
                .multilineTextAlignment(.leading)
            }
          }

          Text(
            "Si malgr√© tout le probl√®me perdure, signalez-le."
          )
        }
      },
      label: {
        Image(systemName: "exclamationmark.triangle.fill")
          .foregroundColor(.red)
          .frame(width: 12)
        Text("L'application rencontre un probl√®me ?")
          .multilineTextAlignment(.leading)
      }
    )
  }
}

private struct HelpFAQReportNumberItem: View {
  var body: some View {
    DisclosureGroup(
      content: {
        Text(
          [
            "Pour signaler un num√©ro ind√©sirable, allez dans l'onglet 'Signaler' de l'application. ",
            "Cela aide √† am√©liorer la liste de blocage et √† rendre l‚Äôapplication plus efficace.",
          ].joined()
        )
      },
      label: {
        Image(systemName: "exclamationmark.shield.fill")
          .foregroundColor(.accent)
          .frame(width: 12)
        Text("Comment signaler un num√©ro ?")
          .multilineTextAlignment(.leading)
      }
    )
  }
}

private struct HelpFAQCallHistoryItem: View {
  var body: some View {
    DisclosureGroup(
      content: {
        Text(
          [
            "Depuis iOS 18, les num√©ros bloqu√©s par les extensions de blocage d'appels sont visibles dans ",
            "l'historique des appels. Cela permet de garder une trace des appels bloqu√©s, mais ne signifie ",
            "pas que l'appel a √©t√© re√ßu ou que vous devez y r√©pondre.",
          ].joined()
        )
      },
      label: {
        Image(systemName: "clock.fill")
          .foregroundColor(.accent)
          .frame(width: 12)
        Text(
          "Pourquoi les num√©ros bloqu√©s apparaissent-ils dans l'historique des appels ?"
        )
        .multilineTextAlignment(.leading)
      }
    )
  }
}

private struct HelpFAQSupportProjectItem: View {
  @Binding var showDonationSheet: Bool
  var body: some View {
    DisclosureGroup(
      content: {
        VStack(alignment: .leading, spacing: 16) {
          Text(
            [
              "Si vous appr√©cier l'application et souhaitez soutenir son d√©veloppement, ",
              "vous pouvez faire un don et noter l'application. ",
              "Cela permet de financer le temps de d√©veloppment et d'am√©lioration de l'application. ",
              "Vous pouvez √©galement partager l'application avec vos amis et votre famille ",
              "pour aider √† la faire conna√Ætre.",
            ].joined()
          )

          Button {
            showDonationSheet = true
          } label: {
            HStack {
              Image(systemName: "heart.fill")
              Text("Soutenez Saracroche")
            }
          }
          .buttonStyle(.fullWidth(background: .pink, foreground: .white))
        }
      },
      label: {
        Image(systemName: "gift.fill")
          .foregroundColor(.accent)
          .frame(width: 12)
        Text("Comment soutenir le projet ?")
          .multilineTextAlignment(.leading)
      }
    )
  }
}

private struct HelpFAQPrivacyItem: View {
  var body: some View {
    DisclosureGroup(
      content: {
        Text(
          [
            "Saracroche ne collecte aucune donn√©e personnelle, n‚Äôutilise aucun service tiers et ne transmet ",
            "aucune information √† qui que ce soit. Toutes les donn√©es restent sur votre appareil. ",
            "Le respect de la vie priv√©e est un droit fondamental, m√™me si on n‚Äôa rien √† cacher.",
          ].joined()
        )
      },
      label: {
        Image(systemName: "lock.shield.fill")
          .foregroundColor(.accent)
          .frame(width: 12)
        Text("Respect de la vie priv√©e ?")
          .multilineTextAlignment(.leading)
      }
    )
  }
}

private struct HelpFAQWhyFreeItem: View {
  @Binding var showDonationSheet: Bool
  var body: some View {
    DisclosureGroup(
      content: {
        VStack(alignment: .leading, spacing: 16) {
          Text(
            [
              "Elle est d√©velopp√©e b√©n√©volement par un d√©veloppeur ind√©pendant (Camille), ",
              "qui en avait assez de recevoir des appels ind√©sirables. L‚Äôapplication est d√©velopp√©e sur ",
              "son temps libre. Vous pouvez soutenir le projet en faisant un don et noter l'application",
            ].joined()
          )

          Button {
            showDonationSheet = true
          } label: {
            HStack {
              Image(systemName: "heart.fill")
              Text("Soutenez Saracroche")
            }
          }
          .buttonStyle(.fullWidth(background: .red, foreground: .white))
        }
      },
      label: {
        Image(systemName: "dollarsign.circle.fill")
          .foregroundColor(.accent)
          .frame(width: 12)
        Text("Pourquoi l'application est-elle gratuite et sans publicit√© ?")
          .multilineTextAlignment(.leading)
      }
    )
  }
}

private struct HelpFAQBearPawItem: View {
  var body: some View {
    DisclosureGroup(
      content: {
        Text(
          [
            "Sarah est une ourse qui a √©t√© sauv√©e par Camille, le d√©veloppeur de l'application. ",
            "C'est elle qui raccroche en disant : ¬´ Tu connais Sarah ? ¬ª, l'autre r√©pond : ¬´ Sarah qui ? ¬ª, ",
            "et elle r√©pond : ¬´ Sarah Croche ! ¬ª √† chaque appel ind√©sirable qu'elle re√ßoit. Merci √† Sarah.",
          ].joined()
        )
      },
      label: {
        Image(systemName: "teddybear.fill")
          .foregroundColor(.accent)
          .frame(width: 12)
        Text("Pourquoi une patte d'ours ?")
          .multilineTextAlignment(.leading)
      }
    )
  }
}

private struct HelpFAQ33700Item: View {
  var body: some View {
    DisclosureGroup(
      content: {
        VStack(alignment: .leading, spacing: 16) {
          Text(
            [
              "Le service 33700 est un service gratuit mis en place par les op√©rateurs de t√©l√©phonie mobile ",
              "pour signaler les appels et SMS ind√©sirables. Il permet aux utilisateurs de signaler les num√©ros ",
              "directement aupr√®s de leur op√©rateur, qui peut ensuite prendre des mesures pour bloquer ces ",
              "num√©ros",
            ].joined()
          )

          Button {
            if let url = URL(
              string: "https://www.33700.fr/"
            ) {
              UIApplication.shared.open(url)
            }
          } label: {
            HStack {
              Image(systemName: "flag.fill")
              Text("Acc√©der au service 33700")
            }
          }
          .buttonStyle(.fullWidth(background: .orange, foreground: .white))
        }
      },
      label: {
        Image(systemName: "flag.fill")
          .foregroundColor(.accent)
          .frame(width: 12)
        Text("C'est quoi le service 33700 ?")
          .multilineTextAlignment(.leading)
      }
    )
  }
}

private struct HelpFAQOperatorLookupItem: View {
  var body: some View {
    DisclosureGroup(
      content: {
        VStack(alignment: .leading, spacing: 16) {
          Text(
            [
              "Pour conna√Ætre l'op√©rateur d'un num√©ro, vous pouvez utiliser le service gratuit de l'ARCEP. ",
              "Le service est accessible via le lien ci-dessous. Il vous suffit de saisir le num√©ro de ",
              "t√©l√©phone pour obtenir des informations sur l'op√©rateur.",
            ].joined()
          )

          Button {
            if let url = URL(
              string:
                "https://www.arcep.fr/mes-demarches-et-services/entreprises/fiches-pratiques/"
                + "base-numerotation.html"
            ) {
              UIApplication.shared.open(url)
            }
          } label: {
            HStack {
              Image(systemName: "person.fill.questionmark")
              Text("Connaitre l'op√©rateur")
            }
          }
          .buttonStyle(.fullWidth(background: .blue, foreground: .white))
        }
      },
      label: {
        Image(systemName: "person.fill.questionmark")
          .foregroundColor(.accent)
          .frame(width: 12)
        Text("Comment connaitre l'op√©rateur d'un num√©ro ?")
          .multilineTextAlignment(.leading)
      }
    )
  }
}

private struct SupportItem: View {
  var body: some View {
    VStack(spacing: 16) {
      Text(
        "Vous avez besoin d'aide ?"
      )
      .frame(maxWidth: .infinity, alignment: .leading)

      Button {
        if let version = Bundle.main.infoDictionary?[
          "CFBundleShortVersionString"
        ] as? String {
          let deviceModel = UIDevice.current.modelIdentifier
          let systemVersion = UIDevice.current.systemVersion

          let deviceInfo = """
            Appareil : \(deviceModel)
            Version iOS : \(systemVersion)
            Version de l'application : \(version)
            """

          let body = """
            Bonjour,

            (Votre message ici ou description du bug avec une capture d'√©cran si possible)

            \(deviceInfo)
            """

          let encodedBody =
            body.addingPercentEncoding(
              withAllowedCharacters: .urlQueryAllowed
            ) ?? ""
          let urlString =
            "mailto:mail@cbouvat.com?subject=Bug%20-%20Saracroche%20iOS&body="
            + encodedBody
          if let url = URL(string: urlString) {
            UIApplication.shared.open(url)
          }
        }
      } label: {
        HStack {
          Image(systemName: "envelope.fill")
          Text("Envoyer un e-mail")
        }
      }
      .buttonStyle(.fullWidth(background: .app, foreground: .black))

      Button {
        if let url = URL(string: "https://github.com/cbouvat/saracroche-ios/issues") {
          UIApplication.shared.open(url)
        }
      } label: {
        HStack {
          Image(systemName: "exclamationmark.bubble.fill")
          Text("Cr√©er une issue sur GitHub")
        }
      }
      .buttonStyle(.fullWidth(background: .black, foreground: .white))
    }
    .padding(.vertical, 6)
  }
}

#Preview {
  HelpNavigationView()
}
